--Explore the objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES

--Explore All columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customer'

--Explore All countries in the customer table
SELECT DISTINCT country FROM gold.dim_customer

--Explore All categories in the product table
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_product
ORDER BY category, subcategory, product_name

--Explore Dates boundaries in the database
--Find the date of the first and last order
SELECT 
MIN(order_date) AS first_order_date, 
MAX(order_date) AS last_order_date ,
DATEDIFF(year, MIN(order_date), MAX(order_date)) AS years_of_data
FROM gold.fact_sales

--Finde the youngest and the oldest customer
SELECT
MIN(birth_date) AS oldest_customer,
DATEDIFF(year, MIN(birth_date), GETDATE()) AS age_oldest_customer,
MAX(birth_date) AS youngest_customer,
DATEDIFF(year, MAX(birth_date), GETDATE()) AS age_youngest_customer
FROM gold.dim_customer

--Measure Exploration
    --Find total sales
    SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales
    --Find quantity sold
    SELECT SUM(quantity) AS total_quantity FROM gold.fact_sales
    --Find average price
    SELECT AVG(sales_amount) AS average_price FROM gold.fact_sales
    --Find Total number of orders
    SELECT COUNT(DISTINCT order_number) AS total_orders FROM gold.fact_sales
    --Find Total number of customers
    SELECT COUNT(DISTINCT customer_id) AS total_customers FROM gold.dim_customer
    --Find Total number of products
    SELECT COUNT(DISTINCT product_id) AS total_products FROM gold.dim_product

    --Find Total number of customers that have placed an order
    SELECT COUNT(DISTINCT customer_key) AS total_customers_with_orders FROM gold.fact_sales

--Generate a Report that shows all Key Metrics
SELECT 'Total Sales' AS metric, SUM(sales_amount) AS value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' AS metric, SUM(quantity) AS value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' AS metric, AVG(sales_amount) AS value FROM gold.fact_sales
UNION ALL
SELECT 'Total Orders' AS metric, COUNT(DISTINCT order_number) AS value FROM gold.fact_sales
UNION ALL
SELECT 'Total Customers' AS metric, COUNT(DISTINCT customer_id) AS value FROM gold.dim_customer
UNION ALL
SELECT 'Total Products' AS metric, COUNT(DISTINCT product_id) AS value FROM gold.dim_product

--Magnitudes
    --Sum Measure by Dimension
    --Find total customers by country
    SELECT country, COUNT(DISTINCT customer_key) AS total_customers
    FROM gold.dim_customer
    GROUP BY country
    ORDER BY total_customers DESC

    --Find total customers by gender
    SELECT gender, COUNT(DISTINCT customer_key) AS total_customers
    FROM gold.dim_customer
    GROUP BY gender
    ORDER BY total_customers DESC

    --Find total products by category
    SELECT category, COUNT(DISTINCT product_id) AS total_products
    FROM gold.dim_product
    GROUP BY category
    ORDER BY total_products DESC

    --What is the Avarage cost in each category
    SELECT category, AVG(cost) AS average_cost
    FROM gold.dim_product
    GROUP BY category
    ORDER BY average_cost DESC

    --What is the total revenue generated for each category
    SELECT p.category, SUM(sales_amount) AS total_revenue
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_product p
    ON p.product_key = f.product_key
    GROUP BY p.category
    ORDER BY total_revenue DESC

    --Find total revenue generated by each customer
    SELECT c.customer_id, c.first_name, c.last_name, SUM(sales_amount) AS total_revenue
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_customer c
    ON c.customer_key = f.customer_key
    GROUP BY c.customer_id, c.first_name, c.last_name
    ORDER BY total_revenue DESC

    --What is the distribution of sold items across countries
    SELECT c.country, SUM(f.quantity) AS total_sold_items
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_customer c
    ON c.customer_key = f.customer_key
    GROUP BY c.country
    ORDER BY total_sold_items DESC

--Rankings
--Order the values of dimension by a measure
    --Which 5 products have the highest sales
    SELECT TOP 5
    p.product_name, SUM(sales_amount) AS total_sales
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_product p
    ON p.product_key = f.product_key
    GROUP BY p.product_name
    ORDER BY total_sales DESC
    --Do the same but using window functions
    SELECT *
    FROM(
        SELECT
        p.product_name, SUM(f.sales_amount) AS total_sales,
        ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) DESC) AS rank_product
        FROM gold.fact_sales f
        LEFT JOIN gold.dim_product p
        ON p.product_key = f.product_key
        GROUP BY p.product_name) t
    WHERE rank_product <= 5
        

    --Which are the 5 products with the lowest sales
    SELECT TOP 5
    p.product_name, SUM(sales_amount) AS total_sales
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_product p
    ON p.product_key = f.product_key
    GROUP BY p.product_name
    ORDER BY total_sales ASC
    
    --Find the top 10 customers with the highest revenue
    SELECT TOP 10
    c.customer_id, c.first_name, c.last_name, SUM(sales_amount) AS total_revenue
    FROM gold.fact_sales f
    LEFT JOIN gold.dim_customer c
    ON c.customer_key = f.customer_key
    GROUP BY c.customer_id, c.first_name, c.last_name
    ORDER BY total_revenue DESC


  